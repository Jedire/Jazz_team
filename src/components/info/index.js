import React, {Component} from 'react'
import logo from './InfoCalendar.png'

class Info extends Component{
    constructor(props){
        super(props);
        this.state = {
            reverted: false
        }

    }

    render(){

        return(
          <div className="wrapper info">
            <div className="center" >
              <div class="Box-body">
            		<article class="markdown-body entry-content p-5" itemprop="text">
            			<h1>JazzTeam React</h1>
            			<p>Реализовано приложение, которое отображает несколько страниц, в зависимости от url браузера. Оформление и дизайн разработаны самастоятельно.</p>
            			<p>Использовался следующий стек технологий: JavaScript Web-фреймворк: React/Redux CSS - не использовались сторонние CSS-библиотеки или препроцессоры</p>
            			<p>Описание страниц:</p>
            			<ol>
            				<li>/ - главная страница.</li>
            				<li>/login - Авторизация - страница авторизации.</li>
            				<li>/profile - Профиль - страница, которая отображает любую информацию об авторизованном пользователе. Должна быть закрыта без авторизации.</li>
            				<li>/info - Информация - страница с любой однородной информацией.</li>
            			</ol>
            			<p>Реализована боковая панель навигации, которая отображается на всех страницах приложения и содержать ссылки на главную страницу, на страницу с информацией (/info) и на страницу пользователя (/profile).</p>
            			<p>Реализован переход на страницу Авторизация при попытке войти в Профиль, если пользователь не авторизован.</p>
            			<p>Реализовано отображение имени авторизованного пользователя на панели навигации.</p>
            			<p>Для авторизации пользователя использовались фейковые данные username: Admin, password: 12345678.</p>
            			<p>При вводе правильных данных, переход на страницу профиля пользователя.</p>
            			<p>При попытке ввести некорректные данные отображается сообщение "Имя пользователя или пароль введены неверно".</p>
            			<p>Реализован в приложении дополнительный раздел: Таблица с данными.</p>
            			<h2>Таблица с данными</h2>Реализована в приложении страница, на которой отображена таблица с данными. Путь url, по которому страница доступна в приложении, /table.
            			<p>Страница закрыта без авторизации.</p>
            			<p>Исходные данные для таблицы реализованы в json формате и помещены в отдельный js файл. В таблице находятся данные всех пользователей.</p>
            			<p>Таблица уменьшена стилями по высоте, для появления скрола, ширина зависит от ширины окна браузера.</p>
            			<p>Заголовки колонок таблицы зафиксированными, при вертикальном скролле они всегда отображаются на экране.</p>
            			<p>Первая колонка зафиксирована, чтобы при горизонтальном скролле она всегда отображалась на экране.</p>
            			<p>Реализовано редактирование ячеек таблицы при двойном нажатии левой клавиши мыши.</p>
            			<h2>Дополнительные условия соблюдены</h2>Код приложения помещен в GitHub репозиторий с описанием. Каждая отдельная задача тестового задания оформлена отдельного коммита.
            		</article>
            	</div>
            </div>
          </div>
        )
    }

}

export default Info
